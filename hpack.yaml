name:                unicode-transforms
version:             0.1.0.0
synopsis:            Unicode transforms (normalization NFC/NFD/NFKC/NFKD)
description:
  This is a lightweight library supporting a limited set of unicode
  transformations (only normalizations as of now) on ByteStrings (UTF-8) and
  Text without requiring any other system libraries. It is based on
  the utf8proc C utility.
  .
  text-icu is a full featured alternative for all unicode operations but with
  a dependency on the system installed icu libraries. This package aims to
  provide an API similar to text-icu.
  .
  For more details see the README.md file.

homepage:            http://github.com/harendra-kumar/unicode-transforms
license:             BSD3
license-file:        LICENSE
author:              Harendra Kumar
maintainer:          harendra.kumar@gmail.com
copyright:
  - 2016 Harendra Kumar
  - 2014â€“2015 Antonio Nikishaev
category:            Data,Text,Unicode
stability:           Experimental
github:              harendra-kumar/unicode-transforms

tested-with: GHC==7.8.4, GHC==7.10.3, GHC==8.0.1

extra-source-files:
  - Changelog.md
  - NOTES.md
  - README.md
  - benchmark/data/*.txt
  - cbits/*.h
  - cbits/XQillaExport.hpp
  - stack.yaml
  - stack-7.8.yaml
  - stack-7.10.yaml
  - stack-8.0.yaml
  - unicode-data/README.md
  - unicode-data/ucd/NormalizationTest.txt

flags:
  has-llvm:
    description: Use llvm backend for compilation
    default: False
    manual: True
  has-icu:
    description: Use text-icu for benchmark comparison
    default: False
    manual: True

ghc-options:
  - -Wall
  - -fwarn-identities
  - -fwarn-incomplete-record-updates
  - -fwarn-incomplete-uni-patterns
  - -fwarn-tabs


dependencies: base >= 4.7 && < 5

library:
  cc-options: -Wall
  include-dirs: cbits
  c-sources:    cbits/utf8proc.c

  ghc-options: -O2 -funbox-strict-fields
  when:
    - condition: flag(has-llvm)
      ghc-options: -fllvm

  source-dirs: .
  exposed-modules:
    - Data.ByteString.UTF8.Normalize
    - Data.String.Normalize
    - Data.Text.Normalize
    - Data.Text.NormalizeNative
    - Data.Unicode.Types
  other-modules:
    - Data.Unicode.Internal.NormalizeStream
    - Data.Unicode.Properties.CombiningClass
    - Data.Unicode.Properties.Compositions
    - Data.Unicode.Properties.Decomposable
    - Data.Unicode.Properties.DecomposableK
    - Data.Unicode.Properties.Decompose
    - Data.Unicode.Properties.DecomposeHangul
    - Data.Unicode.Properties.Decompositions
    - Data.Unicode.Properties.DecompositionsK
    - Data.Unicode.UTF8Proc
  dependencies:
    - bitarray
    - bytestring
    - text

# developer mode only
executables:
  normalizefile:
    ghc-options: -O2 -funbox-strict-fields
    source-dirs: benchmark
    main:        NormalizeFile.hs
    dependencies:
      - deepseq >= 1.1.0.0
      - filepath
      - path
      - path-io
      - text
      - unicode-transforms

tests:
  ucd:
    ghc-options: -O0
    source-dirs: test
    main:        NormalizationTest.hs
    dependencies:
      - getopt-generics
      - split
      - text
      - unicode-transforms
  quickcheck:
    ghc-options: -O0
    source-dirs: test
    main:        Properties.hs
    dependencies:
      - deepseq >= 1.1.0.0
      - QuickCheck
      - text
      - unicode-transforms
    when:
      - condition: flag(has-icu)
        cpp-options: -DHAS_ICU
        dependencies:
          - text-icu >= 0.6.2.1

benchmarks:
  bench:
    ghc-options: -O2 -funbox-strict-fields
    when:
      - condition: flag(has-icu)
        cpp-options: -DBENCH_ICU
        dependencies:
          - text-icu >= 0.6.2.1

    source-dirs: benchmark
    main:        Benchmark.hs
    dependencies:
      - criterion >= 0.4.0
      - deepseq >= 1.1.0.0
      - filepath
      - optparse-applicative
      - path
      - path-io
      - text
      - unicode-transforms
